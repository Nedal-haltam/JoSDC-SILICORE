InstMem[ 0] <= 32'h34020000;// ori $2 $0 0x0
InstMem[ 1] <= 32'h380A0000;// xori $10 $0 0x0
InstMem[ 2] <= 32'h2014000A;// addi $20 $0 0xa
InstMem[ 3] <= 32'h00002820;// add $5 $0 $0
InstMem[ 4] <= 32'h20010001;// addi $1 $0 0x1
InstMem[ 5] <= 32'h2016FFFF;// addi $22 $0 -1
InstMem[ 6] <= 32'h00202820;// add $5 $1 $0
InstMem[ 7] <= 32'h8CAF0000;// lw $15 $5 0
InstMem[ 8] <= 32'h01E05025;// or $10 $15 $0
InstMem[ 9] <= 32'h2022FFFF;// addi $2 $1 -1
InstMem[10] <= 32'h00403020;// add $6 $2 $0
InstMem[11] <= 32'h8CD00000;// lw $16 $6 0
InstMem[12] <= 32'h0056C82B;// sgt $25 $2 $22
InstMem[13] <= 32'h020AD02B;// sgt $26 $16 $10
InstMem[14] <= 32'h0359D824;// and $27 $26 $25
InstMem[15] <= 32'h13600005;// beq $27 $0 exit2
InstMem[16] <= 32'h20470001;// addi $7 $2 0x1
InstMem[17] <= 32'hACF00000;// sw $16 $7 0
InstMem[18] <= 32'h2042FFFF;// addi $2 $2 -1
InstMem[19] <= 32'h0800000A;// j loop2
InstMem[20] <= 32'h20470001;// addi $7 $2 0x1
InstMem[21] <= 32'hACEA0000;// sw $10 $7 0
InstMem[22] <= 32'h20210001;// addi $1 $1 0x1
InstMem[23] <= 32'h0034E02A;// slt $28 $1 $20
InstMem[24] <= 32'h1780FFEE;// bne $28 $0 loop1
InstMem[25] <= 32'h00000000;// nop
InstMem[26] <= 32'hFC000000;// hlt
InstMem[999] <= 32'hFC000000;// ori $2 $0 0x0
InstMem[1000] <= 32'h201FFFFF;// xori $10 $0 0x0
InstMem[1001] <= 32'hFC000000;// addi $20 $0 0xa
