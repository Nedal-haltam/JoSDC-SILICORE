InstMem[ 0] <= 32'h200D03E8;// addi $13 $0 1000
InstMem[ 1] <= 32'h200C0096;// addi $12 $0 150
InstMem[ 2] <= 32'h20080000;// addi $8 $0 0
InstMem[ 3] <= 32'h20090000;// addi $9 $0 0
InstMem[ 4] <= 32'h8C0A0001;// lw $10 1 ( $0 )
InstMem[ 5] <= 32'h8C0B0002;// lw $11 2 ( $0 )
InstMem[ 6] <= 32'h8C0F0000;// lw $15 0 ( $0 )
InstMem[ 7] <= 32'h11A00018;// beq $13 $zero 24
InstMem[ 8] <= 32'h8D0E0003;// lw $14 3 ( $8 )
InstMem[ 9] <= 32'h8D100004;// lw $16 4 ( $8 )
InstMem[10] <= 32'h000EC020;// add $24 $0 $14
InstMem[11] <= 32'h0010C820;// add $25 $0 $16
InstMem[12] <= 32'h0000D020;// add $26 $0 $0
InstMem[13] <= 32'h134C0008;// beq $26 $12 8
InstMem[14] <= 32'h01CFB826;// xor $23 $14 $15
InstMem[15] <= 32'h0017B8C2;// srl $23 $23 3
InstMem[16] <= 32'h0217A026;// xor $20 $16 $23
InstMem[17] <= 32'h000E8020;// add $16 $0 $14
InstMem[18] <= 32'h00147020;// add $14 $0 $20
InstMem[19] <= 32'h235A0001;// addi $26 $26 1
InstMem[20] <= 32'h0C00000D;// jal feisteldecryptloop
InstMem[21] <= 32'h01CA7026;// xor $14 $14 $10
InstMem[22] <= 32'h020B8026;// xor $16 $16 $11
InstMem[23] <= 32'hAD2E07D3;// sw $14 2003 ( $9 )
InstMem[24] <= 32'hAD3007D4;// sw $16 2004 ( $9 )
InstMem[25] <= 32'h00185020;// add $10 $0 $24
InstMem[26] <= 32'h00195820;// add $11 $0 $25
InstMem[27] <= 32'h21080002;// addi $8 $8 2
InstMem[28] <= 32'h21290002;// addi $9 $9 2
InstMem[29] <= 32'h21ADFFFF;// addi $13 $13 -1
InstMem[30] <= 32'h0C000007;// jal decryptloop
InstMem[31] <= 32'hFC000000;// hlt
InstMem[32] <= 32'hFC000000;// hlt
InstMem[999] <= 32'hFC000000;// hlt
InstMem[1000] <= 32'h201FFFFF;// addi x31 x0 -1
InstMem[1001] <= 32'hFC000000;// hlt
