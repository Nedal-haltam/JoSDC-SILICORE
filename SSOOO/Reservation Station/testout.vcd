$date
	Sat Dec 21 23:08:46 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RS_tb $end
$var wire 12 ! opcode_test [11:0] $end
$var wire 1 " busy_test $end
$var wire 5 # ROBEN2_test [4:0] $end
$var wire 32 $ ROBEN2_VAL_test [31:0] $end
$var wire 5 % ROBEN1_test [4:0] $end
$var wire 32 & ROBEN1_VAL_test [31:0] $end
$var wire 32 ' Immediate_test [31:0] $end
$var wire 32 ( FU_Val2 [31:0] $end
$var wire 32 ) FU_Val1 [31:0] $end
$var wire 4 * FU_RS_ID [3:0] $end
$var wire 32 + FU_Immediate [31:0] $end
$var wire 4 , FU_ALUOP [3:0] $end
$var wire 1 - FULL_FLAG $end
$var wire 4 . ALUOP_test [3:0] $end
$var reg 4 / ALUOP [3:0] $end
$var reg 5 0 CDB_ROBEN [4:0] $end
$var reg 32 1 CDB_ROBEN_VAL [31:0] $end
$var reg 1 2 FU_Is_Free $end
$var reg 32 3 Immediate [31:0] $end
$var reg 5 4 ROBEN1 [4:0] $end
$var reg 32 5 ROBEN1_VAL [31:0] $end
$var reg 5 6 ROBEN2 [4:0] $end
$var reg 32 7 ROBEN2_VAL [31:0] $end
$var reg 1 8 VALID_Inst $end
$var reg 1 9 clk $end
$var reg 1 : clk_en $end
$var reg 4 ; input_index_test [3:0] $end
$var reg 12 < opcode [11:0] $end
$var reg 1 = rst $end
$var integer 32 > i [31:0] $end
$scope module dut $end
$var wire 4 ? ALUOP [3:0] $end
$var wire 4 @ ALUOP_test [3:0] $end
$var wire 5 A CDB_ROBEN [4:0] $end
$var wire 32 B CDB_ROBEN_VAL [31:0] $end
$var wire 1 - FULL_FLAG $end
$var wire 1 2 FU_Is_Free $end
$var wire 32 C Immediate [31:0] $end
$var wire 5 D ROBEN1 [4:0] $end
$var wire 32 E ROBEN1_VAL [31:0] $end
$var wire 5 F ROBEN1_test [4:0] $end
$var wire 5 G ROBEN2 [4:0] $end
$var wire 32 H ROBEN2_VAL [31:0] $end
$var wire 5 I ROBEN2_test [4:0] $end
$var wire 1 8 VALID_Inst $end
$var wire 1 " busy_test $end
$var wire 1 9 clk $end
$var wire 4 J input_index_test [3:0] $end
$var wire 12 K opcode [11:0] $end
$var wire 12 L opcode_test [11:0] $end
$var wire 1 = rst $end
$var wire 32 M ROBEN2_VAL_test [31:0] $end
$var wire 32 N ROBEN1_VAL_test [31:0] $end
$var wire 32 O Immediate_test [31:0] $end
$var reg 4 P FU_ALUOP [3:0] $end
$var reg 32 Q FU_Immediate [31:0] $end
$var reg 4 R FU_RS_ID [3:0] $end
$var reg 32 S FU_Val1 [31:0] $end
$var reg 32 T FU_Val2 [31:0] $end
$var reg 4 U Next_Free [3:0] $end
$var reg 4 V i [3:0] $end
$var reg 4 W j [3:0] $end
$var reg 4 X k [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx X
bx W
b0 V
b0 U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
0=
bx <
bx ;
1:
09
x8
bx 7
bx 6
bx 5
bx 4
bx 3
02
bx 1
bx 0
bx /
bx .
x-
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
x"
bx !
$end
#1
b1000 W
19
#2
09
0-
b0 *
b0 R
b1000 W
b0 V
1=
#3
b0 V
b1000 W
19
#4
09
08
b1001101 3
b1001101 C
b110 7
b110 H
b101 5
b101 E
b100 6
b100 G
b11 4
b11 D
b10 /
b10 ?
b1 <
b1 K
0=
#5
b1000 W
19
#6
09
18
#7
b1000 V
b1000 U
b1000 W
19
#8
09
b1010111 3
b1010111 C
b10000 7
b10000 H
b1111 5
b1111 E
b110 6
b110 G
b101 4
b101 D
b1100 /
b1100 ?
b1011 <
b1011 K
08
#9
b1000 W
19
#10
09
18
#11
b1000 V
b111 U
b1000 W
19
#12
0"
b0 ;
b0 J
b0 >
0:
08
#14
b1 ;
b1 J
b1 >
#16
b10 ;
b10 J
b10 >
#18
b11 ;
b11 J
b11 >
#20
b100 ;
b100 J
b100 >
#22
b101 ;
b101 J
b101 >
#24
b1111 &
b1111 N
b10000 $
b10000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b101 %
b101 F
b110 #
b110 I
1"
b110 ;
b110 J
b110 >
#26
b101 &
b101 N
b110 $
b110 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
b11 %
b11 F
b100 #
b100 I
b111 ;
b111 J
b111 >
#28
09
1:
b1000 >
#29
b1000 W
19
#30
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#32
b1 ;
b1 J
b1 >
#34
b10 ;
b10 J
b10 >
#36
b11 ;
b11 J
b11 >
#38
b100 ;
b100 J
b100 >
#40
b101 ;
b101 J
b101 >
#42
b1111 &
b1111 N
b10000 $
b10000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b101 %
b101 F
b110 #
b110 I
1"
b110 ;
b110 J
b110 >
#44
b101 &
b101 N
b110 $
b110 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
b11 %
b11 F
b100 #
b100 I
b111 ;
b111 J
b111 >
#46
09
12
1:
b1000 >
#47
b1000 W
b1000 X
19
#48
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#50
b1 ;
b1 J
b1 >
#52
b10 ;
b10 J
b10 >
#54
b11 ;
b11 J
b11 >
#56
b100 ;
b100 J
b100 >
#58
b101 ;
b101 J
b101 >
#60
b1111 &
b1111 N
b10000 $
b10000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b101 %
b101 F
b110 #
b110 I
1"
b110 ;
b110 J
b110 >
#62
b101 &
b101 N
b110 $
b110 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
b11 %
b11 F
b100 #
b100 I
b111 ;
b111 J
b111 >
#64
09
b1111011 1
b1111011 B
b101 0
b101 A
1:
b1000 >
#65
b1000 X
b1000 W
19
#66
09
02
b111001000 1
b111001000 B
b110 0
b110 A
#67
b1000 W
19
#68
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#70
b1 ;
b1 J
b1 >
#72
b10 ;
b10 J
b10 >
#74
b11 ;
b11 J
b11 >
#76
b100 ;
b100 J
b100 >
#78
b101 ;
b101 J
b101 >
#80
b1111011 &
b1111011 N
b111001000 $
b111001000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
1"
b110 ;
b110 J
b110 >
#82
b101 &
b101 N
b110 $
b110 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
b11 %
b11 F
b100 #
b100 I
b111 ;
b111 J
b111 >
#84
09
12
1:
b1000 >
#85
b1010111 +
b1010111 Q
b111001000 (
b111001000 T
b1111011 )
b1111011 S
b1100 ,
b1100 P
b111 *
b111 R
b1000 X
b1000 W
19
#86
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#88
b1 ;
b1 J
b1 >
#90
b10 ;
b10 J
b10 >
#92
b11 ;
b11 J
b11 >
#94
b100 ;
b100 J
b100 >
#96
b101 ;
b101 J
b101 >
#98
b1111011 &
b1111011 N
b111001000 $
b111001000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
1"
b110 ;
b110 J
b110 >
#100
b101 &
b101 N
b110 $
b110 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
b11 %
b11 F
b100 #
b100 I
b111 ;
b111 J
b111 >
#102
09
b1100010101 1
b1100010101 B
b11 0
b11 A
02
1:
b1000 >
#103
b1100010101 &
b1100010101 N
b0 %
b0 F
b1000 W
19
#104
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#106
b1 ;
b1 J
b1 >
#108
b10 ;
b10 J
b10 >
#110
b11 ;
b11 J
b11 >
#112
b100 ;
b100 J
b100 >
#114
b101 ;
b101 J
b101 >
#116
b1111011 &
b1111011 N
b111001000 $
b111001000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
1"
b110 ;
b110 J
b110 >
#118
b1100010101 &
b1100010101 N
b110 $
b110 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
b100 #
b100 I
b111 ;
b111 J
b111 >
#120
09
b1111100111 1
b1111100111 B
b100 0
b100 A
1:
b1000 >
#121
b1111100111 $
b1111100111 M
b0 #
b0 I
b1000 W
19
#122
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#124
b1 ;
b1 J
b1 >
#126
b10 ;
b10 J
b10 >
#128
b11 ;
b11 J
b11 >
#130
b100 ;
b100 J
b100 >
#132
b101 ;
b101 J
b101 >
#134
b1111011 &
b1111011 N
b111001000 $
b111001000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
1"
b110 ;
b110 J
b110 >
#136
b1100010101 &
b1100010101 N
b1111100111 $
b1111100111 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
b111 ;
b111 J
b111 >
#138
09
12
1:
b1000 >
#139
b1000 W
b1001101 +
b1001101 Q
b1111100111 (
b1111100111 T
b1100010101 )
b1100010101 S
b10 ,
b10 P
b1000 *
b1000 R
b1000 X
19
#140
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#142
b1 ;
b1 J
b1 >
#144
b10 ;
b10 J
b10 >
#146
b11 ;
b11 J
b11 >
#148
b100 ;
b100 J
b100 >
#150
b101 ;
b101 J
b101 >
#152
b1111011 &
b1111011 N
b111001000 $
b111001000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
b110 ;
b110 J
b110 >
#154
b1100010101 &
b1100010101 N
b1111100111 $
b1111100111 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
1"
b111 ;
b111 J
b111 >
#156
09
02
1:
b1000 >
#157
b1000 W
19
#158
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#160
b1 ;
b1 J
b1 >
#162
b10 ;
b10 J
b10 >
#164
b11 ;
b11 J
b11 >
#166
b100 ;
b100 J
b100 >
#168
b101 ;
b101 J
b101 >
#170
b1111011 &
b1111011 N
b111001000 $
b111001000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
b110 ;
b110 J
b110 >
#172
b1100010101 &
b1100010101 N
b1111100111 $
b1111100111 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
1"
b111 ;
b111 J
b111 >
#174
09
b0 6
b0 G
b0 4
b0 D
b1101111000 <
b1101111000 K
1:
b1000 >
#175
b1000 W
19
#176
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
#178
b1 ;
b1 J
b1 >
#180
b10 ;
b10 J
b10 >
#182
b11 ;
b11 J
b11 >
#184
b100 ;
b100 J
b100 >
#186
b101 ;
b101 J
b101 >
#188
b1111011 &
b1111011 N
b111001000 $
b111001000 M
b1010111 '
b1010111 O
b1011 !
b1011 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
b110 ;
b110 J
b110 >
#190
b1100010101 &
b1100010101 N
b1111100111 $
b1111100111 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
1"
b111 ;
b111 J
b111 >
#192
09
18
1:
b1000 >
#193
b1000 W
b1000 V
b111 U
19
#194
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
0"
b0 ;
b0 J
b0 >
0:
08
#196
b1 ;
b1 J
b1 >
#198
b10 ;
b10 J
b10 >
#200
b11 ;
b11 J
b11 >
#202
b100 ;
b100 J
b100 >
#204
b101 ;
b101 J
b101 >
#206
b1111 &
b1111 N
b10000 $
b10000 M
b1010111 '
b1010111 O
b1101111000 !
b1101111000 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
1"
b110 ;
b110 J
b110 >
#208
b1100010101 &
b1100010101 N
b1111100111 $
b1111100111 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
b111 ;
b111 J
b111 >
#210
09
0"
12
1:
b1000 >
#211
b1000 W
b1010111 +
b1010111 Q
b10000 (
b10000 T
b1111 )
b1111 S
b1100 ,
b1100 P
b111 *
b111 R
b1000 X
19
#212
bx &
bx N
bx $
bx M
bx '
bx O
bx !
bx L
bx .
bx @
bx %
bx F
bx #
bx I
b0 ;
b0 J
b0 >
0:
#214
b1 ;
b1 J
b1 >
#216
b10 ;
b10 J
b10 >
#218
b11 ;
b11 J
b11 >
#220
b100 ;
b100 J
b100 >
#222
b101 ;
b101 J
b101 >
#224
b1111 &
b1111 N
b10000 $
b10000 M
b1010111 '
b1010111 O
b1101111000 !
b1101111000 L
b1100 .
b1100 @
b0 %
b0 F
b0 #
b0 I
1"
b110 ;
b110 J
b110 >
#226
b1100010101 &
b1100010101 N
b1111100111 $
b1111100111 M
b1001101 '
b1001101 O
b1 !
b1 L
b10 .
b10 @
0"
b111 ;
b111 J
b111 >
#228
09
1:
b1000 >
