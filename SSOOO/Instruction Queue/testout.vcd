$date
	Wed Dec 25 21:31:43 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module InstQ_tb $end
$var wire 5 ! shamt [4:0] $end
$var wire 5 " rt [4:0] $end
$var wire 5 # rs [4:0] $end
$var wire 5 $ rd [4:0] $end
$var wire 12 % opcode [11:0] $end
$var wire 16 & immediate [15:0] $end
$var wire 26 ' address [25:0] $end
$var reg 32 ( PC [31:0] $end
$var reg 1 ) clk $end
$var reg 1 * rst $end
$var integer 32 + i [31:0] $end
$var integer 32 , index [31:0] $end
$scope module dut $end
$var wire 32 - PC [31:0] $end
$var wire 1 ) clk $end
$var wire 32 . inst [31:0] $end
$var wire 1 * rst $end
$var reg 1 / VALID_Inst $end
$var reg 26 0 address [25:0] $end
$var reg 16 1 immediate [15:0] $end
$var reg 12 2 opcode [11:0] $end
$var reg 5 3 rd [4:0] $end
$var reg 5 4 rs [4:0] $end
$var reg 5 5 rt [4:0] $end
$var reg 5 6 shamt [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
x/
b100000000000010000000001100100 .
b0 -
b1 ,
b0 +
x*
0)
b0 (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
1/
b10000000001100100 '
b10000000001100100 0
b1100100 &
b1100100 1
b1 !
b1 6
b0 $
b0 3
b1 "
b1 5
b0 #
b0 4
b1000000000 %
b1000000000 2
1)
#2
0)
b10 ,
b10101100000000010000000000000001 .
b1 (
b1 -
b1 +
#3
b10000000000000001 '
b10000000000000001 0
b1 &
b1 1
b0 !
b0 6
b101011000000 %
b101011000000 2
1)
#4
0)
b11 ,
b100000001000000000000001111011 .
b10 (
b10 -
b10 +
#5
b1000000000000001111011 '
b1000000000000001111011 0
b1111011 &
b1111011 1
b1 !
b1 6
b0 "
b0 5
b1 #
b1 4
b1000000000 %
b1000000000 2
1)
#6
0)
b100 ,
b100000000000101111111111111110 .
b11 (
b11 -
b11 +
#7
b101111111111111110 '
b101111111111111110 0
b1111111111111110 &
b1111111111111110 1
b11111 !
b11111 6
b11111 $
b11111 3
b10 "
b10 5
b0 #
b0 4
1)
#8
0)
b101 ,
b10101100010000100000000000000010 .
b100 (
b100 -
b100 +
#9
b10000100000000000000010 '
b10000100000000000000010 0
b10 &
b10 1
b0 !
b0 6
b0 $
b0 3
b10 #
b10 4
b101011000000 %
b101011000000 2
1)
#10
0)
b110 ,
b1000100001100000100000 .
b101 (
b101 -
b101 +
#11
b1000100001100000100000 '
b1000100001100000100000 0
b1100000100000 &
b1100000100000 1
b11 $
b11 3
b1 #
b1 4
b100000 %
b100000 2
1)
#12
0)
b111 ,
b10101100011000111111111110100000 .
b110 (
b110 -
b110 +
#13
b11000111111111110100000 '
b11000111111111110100000 0
b1111111110100000 &
b1111111110100000 1
b11110 !
b11110 6
b11111 $
b11111 3
b11 "
b11 5
b11 #
b11 4
b101011000000 %
b101011000000 2
1)
#14
0)
b1000 ,
b1000100000000000100000 .
b111 (
b111 -
b111 +
#15
b1000100000000000100000 '
b1000100000000000100000 0
b100000 &
b100000 1
b0 !
b0 6
b0 $
b0 3
b10 "
b10 5
b1 #
b1 4
b100000 %
b100000 2
1)
#16
0)
b1001 ,
b11000100010000000100010 .
b1000 (
b1000 -
b1000 +
#17
b11000100010000000100010 '
b11000100010000000100010 0
b10000000100010 &
b10000000100010 1
b100 $
b100 3
b11 #
b11 4
b100010 %
b100010 2
1)
#18
0)
b1010 ,
b100000100010000000100010 .
b1001 (
b1001 -
b1001 +
#19
b100000100010000000100010 '
b100000100010000000100010 0
b100 #
b100 4
1)
#20
0)
b1011 ,
b10101100000001000000000000000011 .
b1010 (
b1010 -
b1010 +
#21
b1000000000000000011 '
b1000000000000000011 0
b11 &
b11 1
b0 $
b0 3
b100 "
b100 5
b0 #
b0 4
b101011000000 %
b101011000000 2
1)
#22
0)
b1100 ,
b11000100010100000100011 .
b1011 (
b1011 -
b1011 +
#23
b11000100010100000100011 '
b11000100010100000100011 0
b10100000100011 &
b10100000100011 1
b101 $
b101 3
b10 "
b10 5
b11 #
b11 4
b100011 %
b100011 2
1)
#24
0)
b1101 ,
b1000100011000000100001 .
b1100 (
b1100 -
b1100 +
#25
b1000100011000000100001 '
b1000100011000000100001 0
b11000000100001 &
b11000000100001 1
b110 $
b110 3
b1 #
b1 4
b100001 %
b100001 2
1)
#26
0)
b1110 ,
b110000100011000000100010 .
b1101 (
b1101 -
b1101 +
#27
b110000100011000000100010 '
b110000100011000000100010 0
b11000000100010 &
b11000000100010 1
b110 #
b110 4
b100010 %
b100010 2
1)
#28
0)
b1110 +
