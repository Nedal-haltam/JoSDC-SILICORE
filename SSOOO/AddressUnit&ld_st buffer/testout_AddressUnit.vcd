$date
	Wed Dec 25 14:56:32 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module AddressUnit_tb $end
$var wire 12 ! out_opcode [11:0] $end
$var wire 32 " out_Write_Data [31:0] $end
$var wire 5 # out_Rd [4:0] $end
$var wire 32 $ out_ROBEN2_VAL [31:0] $end
$var wire 5 % out_ROBEN2 [4:0] $end
$var wire 32 & out_ROBEN1_VAL [31:0] $end
$var wire 5 ' out_ROBEN1 [4:0] $end
$var wire 5 ( out_ROBEN [4:0] $end
$var wire 32 ) out_Immediate [31:0] $end
$var wire 32 * out_EA [31:0] $end
$var wire 1 + VALID_Inst $end
$var reg 5 , Decoded_ROBEN [4:0] $end
$var reg 5 - Decoded_Rd [4:0] $end
$var reg 12 . Decoded_opcode [11:0] $end
$var reg 32 / Immediate [31:0] $end
$var reg 5 0 ROBEN1 [4:0] $end
$var reg 32 1 ROBEN1_VAL [31:0] $end
$var reg 5 2 ROBEN2 [4:0] $end
$var reg 32 3 ROBEN2_VAL [31:0] $end
$scope module dut $end
$var wire 5 4 Decoded_ROBEN [4:0] $end
$var wire 5 5 Decoded_Rd [4:0] $end
$var wire 12 6 Decoded_opcode [11:0] $end
$var wire 32 7 Immediate [31:0] $end
$var wire 5 8 ROBEN1 [4:0] $end
$var wire 32 9 ROBEN1_VAL [31:0] $end
$var wire 5 : ROBEN2 [4:0] $end
$var wire 32 ; ROBEN2_VAL [31:0] $end
$var wire 1 + VALID_Inst $end
$var wire 32 < out_Immediate [31:0] $end
$var wire 5 = out_ROBEN [4:0] $end
$var wire 5 > out_ROBEN1 [4:0] $end
$var wire 32 ? out_ROBEN1_VAL [31:0] $end
$var wire 5 @ out_ROBEN2 [4:0] $end
$var wire 32 A out_ROBEN2_VAL [31:0] $end
$var wire 5 B out_Rd [4:0] $end
$var wire 32 C out_Write_Data [31:0] $end
$var wire 12 D out_opcode [11:0] $end
$var wire 32 E out_EA [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b101000 E
b0 D
b10100 C
bx B
b10100 A
bx @
b1010 ?
bx >
bx =
b11110 <
b10100 ;
bx :
b1010 9
bx 8
b11110 7
b0 6
bx 5
bx 4
b10100 3
bx 2
b1010 1
bx 0
b11110 /
b0 .
bx -
bx ,
0+
b101000 *
b11110 )
bx (
bx '
b1010 &
bx %
b10100 $
bx #
b10100 "
b0 !
$end
#1
1+
b100011000000 !
b100011000000 D
b100011000000 .
b100011000000 6
#2
0+
b100000 !
b100000 D
b100000 .
b100000 6
#3
1+
b111100 )
b111100 <
b111100 /
b111100 7
b110010 "
b110010 C
b110010 $
b110010 A
b110010 3
b110010 ;
b101000 &
b101000 ?
b1100100 *
b1100100 E
b101000 1
b101000 9
b101011000000 !
b101011000000 D
b101011000000 .
b101011000000 6
#4
