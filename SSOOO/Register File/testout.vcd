$date
	Sat Dec 21 23:05:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RegFile_tb $end
$var wire 5 ! output_ROBEN_test [4:0] $end
$var wire 5 " RP1_Reg2_ROBEN [4:0] $end
$var wire 32 # RP1_Reg2 [31:0] $end
$var wire 5 $ RP1_Reg1_ROBEN [4:0] $end
$var wire 32 % RP1_Reg1 [31:0] $end
$var parameter 32 & ROB_EN_WIDTH $end
$var reg 5 ' Decoded_WP1_DRindex [4:0] $end
$var reg 5 ( Decoded_WP1_ROBEN [4:0] $end
$var reg 1 ) Decoded_WP1_Wen $end
$var reg 5 * RP1_index1 [4:0] $end
$var reg 5 + RP1_index2 [4:0] $end
$var reg 5 , WP1_DRindex [4:0] $end
$var reg 32 - WP1_Data [31:0] $end
$var reg 5 . WP1_ROBEN [4:0] $end
$var reg 1 / WP1_Wen $end
$var reg 1 0 clk $end
$var reg 1 1 clk_en $end
$var reg 5 2 input_WP1_DRindex_test [4:0] $end
$var reg 8193 3 msg_ROB_read [8192:0] $end
$var reg 8193 4 msg_RP1_Reg1 [8192:0] $end
$var reg 1 5 rst $end
$var reg 8193 6 temp [8192:0] $end
$var integer 32 7 i [31:0] $end
$scope module dut $end
$var wire 5 8 Decoded_WP1_DRindex [4:0] $end
$var wire 5 9 Decoded_WP1_ROBEN [4:0] $end
$var wire 1 ) Decoded_WP1_Wen $end
$var wire 32 : RP1_Reg1 [31:0] $end
$var wire 5 ; RP1_Reg1_ROBEN [4:0] $end
$var wire 32 < RP1_Reg2 [31:0] $end
$var wire 5 = RP1_Reg2_ROBEN [4:0] $end
$var wire 5 > RP1_index1 [4:0] $end
$var wire 5 ? RP1_index2 [4:0] $end
$var wire 5 @ WP1_DRindex [4:0] $end
$var wire 32 A WP1_Data [31:0] $end
$var wire 5 B WP1_ROBEN [4:0] $end
$var wire 1 / WP1_Wen $end
$var wire 1 0 clk $end
$var wire 5 C input_WP1_DRindex_test [4:0] $end
$var wire 5 D output_ROBEN_test [4:0] $end
$var wire 1 5 rst $end
$var parameter 32 E ROB_EN_WIDTH $end
$var integer 32 F i [31:0] $end
$var integer 32 G j [31:0] $end
$scope begin Update_ROB_Entries_Block $end
$upscope $end
$scope begin Update_Registers_Block $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 E
b101 &
$end
#0
$dumpvars
b100000 G
b100000 F
bx D
bx C
b0 B
bx A
b0 @
bx ?
bx >
bx =
bx <
bx ;
bx :
b0 9
b0 8
bx 7
b0 6
15
b1010010010100000011000101011111011010010110111001100100011001010111100000110001001000000011110100100000001001010110010000100000001011000010000001010010010100000011000101011111010100100110010101100111001100010010000000111101001000000010010101100100 4
b1000100011001010110001101101111011001000110010101100100010111110101011101010000001100010101111101000100010100100110100101101110011001000110010101111000001000000011110100100000001001010110010000100000001011000010000001101111011101010111010001110000011101010111010001011111010100100100111101000010010001010100111001011111011101000110010101110011011101000010000000111101001000000010010101100100 3
bx 2
11
10
0/
b0 .
bx -
b0 ,
bx +
bx *
0)
b0 (
b0 '
bx %
bx $
bx #
bx "
bx !
$end
#1
00
#2
10
b1 '
b1 8
b10 (
b10 9
1)
b10 .
b10 B
b1 ,
b1 @
b1111011 -
b1111011 A
1/
b0 !
b0 D
b1001 2
b1001 C
b1000100011001010110001101101111011001000110010101100100010111110101011101010000001100010101111101000100010100100110100101101110011001000110010101111000001000000011110100100000001000000011100100100000001011000010000001101111011101010111010001110000011101010111010001011111010100100100111101000010010001010100111001011111011101000110010101110011011101000010000000111101001000000010000000110000 6
b0 %
b0 :
b0 $
b0 ;
b1001 *
b1001 >
b1010 7
11
05
#3
00
#4
10
b0 !
b0 D
b1001 2
b1001 C
b0 $
b0 ;
b1000100011001010110001101101111011001000110010101100100010111110101011101010000001100010101111101000100010100100110100101101110011001000110010101111000001000000011110100100000001000000011100100100000001011000010000001101111011101010111010001110000011101010111010001011111010100100100111101000010010001010100111001011111011101000110010101110011011101000010000000111101001000000010000000110000 6
b1001 *
b1001 >
b1010 7
11
#5
00
#6
10
b0 !
b0 D
b1001 2
b1001 C
b0 %
b0 :
b0 $
b0 ;
b1000100011001010110001101101111011001000110010101100100010111110101011101010000001100010101111101000100010100100110100101101110011001000110010101111000001000000011110100100000001000000011100100100000001011000010000001101111011101010111010001110000011101010111010001011111010100100100111101000010010001010100111001011111011101000110010101110011011101000010000000111101001000000010000000110000 6
b1001 *
b1001 >
b1010 7
11
