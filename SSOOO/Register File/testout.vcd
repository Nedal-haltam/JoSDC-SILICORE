$date
	Thu Oct 31 10:35:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RegFile_tb $end
$var wire 32 ! output_ROBEN_test [31:0] $end
$var wire 32 " RP1_Reg2_ROBEN [31:0] $end
$var wire 32 # RP1_Reg2 [31:0] $end
$var wire 32 $ RP1_Reg1_ROBEN [31:0] $end
$var wire 32 % RP1_Reg1 [31:0] $end
$var parameter 32 & ROB_Entry_WIDTH $end
$var reg 5 ' RP1_index1 [4:0] $end
$var reg 5 ( RP1_index2 [4:0] $end
$var reg 5 ) WP1_DRindex [4:0] $end
$var reg 5 * WP1_DRindex_IQ [4:0] $end
$var reg 32 + WP1_Data [31:0] $end
$var reg 5 , WP1_ROBEN [4:0] $end
$var reg 5 - WP1_ROBEN_IQ [4:0] $end
$var reg 1 . WP1_Wen $end
$var reg 1 / WP1_Wen_IQ $end
$var reg 1 0 clk $end
$var reg 5 1 input_WP1_DRindex_test [4:0] $end
$var reg 8193 2 msg_ROB_read [8192:0] $end
$var reg 8193 3 msg_RP1_Reg1 [8192:0] $end
$var reg 1 4 rst $end
$var reg 8193 5 temp [8192:0] $end
$var integer 32 6 i [31:0] $end
$scope module dut $end
$var wire 32 7 RP1_Reg1 [31:0] $end
$var wire 32 8 RP1_Reg1_ROBEN [31:0] $end
$var wire 32 9 RP1_Reg2 [31:0] $end
$var wire 32 : RP1_Reg2_ROBEN [31:0] $end
$var wire 5 ; RP1_index1 [4:0] $end
$var wire 5 < RP1_index2 [4:0] $end
$var wire 5 = WP1_DRindex [4:0] $end
$var wire 5 > WP1_DRindex_IQ [4:0] $end
$var wire 32 ? WP1_Data [31:0] $end
$var wire 5 @ WP1_ROBEN [4:0] $end
$var wire 5 A WP1_ROBEN_IQ [4:0] $end
$var wire 1 . WP1_Wen $end
$var wire 1 / WP1_Wen_IQ $end
$var wire 1 0 clk $end
$var wire 5 B input_WP1_DRindex_test [4:0] $end
$var wire 32 C output_ROBEN_test [31:0] $end
$var wire 1 4 rst $end
$var parameter 32 D ROB_Entry_WIDTH $end
$var integer 32 E i [31:0] $end
$var integer 32 F j [31:0] $end
$scope begin Update_ROB_Entries_Block $end
$upscope $end
$scope begin Update_Registers_Block $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 D
b101 &
$end
#0
$dumpvars
b100000 F
b100000 E
bx C
bx B
b0 A
b0 @
bx ?
b0 >
b0 =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
b0 5
14
b1010010010100000011000101011111011010010110111001100100011001010111100000110001001000000011110100100000001001010110010000100000001011000010000001010010010100000011000101011111010100100110010101100111001100010010000000111101001000000010010101100100 3
b101011101010000001100010101111101000100010100100110100101101110011001000110010101111000010111110100100101010001001000000011110100100000001001010110010000100000001011000010000001101111011101010111010001110000011101010111010001011111010100100100111101000010010001010100111001011111011101000110010101110011011101000010000000111101001000000010010101100100 2
bx 1
10
0/
0.
b0 -
b0 ,
bx +
b0 *
b0 )
bx (
bx '
bx %
bx $
bx #
bx "
bx !
$end
#1
b100000 F
00
#2
10
b1 *
b1 >
b10 -
b10 A
1/
b10 ,
b10 @
b1 )
b1 =
b1111011 +
b1111011 ?
1.
b0 !
b0 C
b1001 1
b1001 B
b1010111010100000011000101011111010001000101001001101001011011100110010001100101011110000101111101001001010100010010000000111101001000000010000000111001001000000010110000100000011011110111010101110100011100000111010101110100010111110101001001001111010000100100010101001110010111110111010001100101011100110111010000100000001111010010000000100000001000000010000000100000001000000010000000100000001000000010000000110000 5
b0 %
b0 7
b0 $
b0 8
b1001 '
b1001 ;
b1010 6
04
#3
00
#4
10
b0 !
b0 C
b1001 1
b1001 B
b0 $
b0 8
b1010111010100000011000101011111010001000101001001101001011011100110010001100101011110000101111101001001010100010010000000111101001000000010000000111001001000000010110000100000011011110111010101110100011100000111010101110100010111110101001001001111010000100100010101001110010111110111010001100101011100110111010000100000001111010010000000100000001000000010000000100000001000000010000000100000001000000010000000110000 5
b1001 '
b1001 ;
b1010 6
#5
00
#6
10
b0 !
b0 C
b1001 1
b1001 B
b0 %
b0 7
b0 $
b0 8
b1010111010100000011000101011111010001000101001001101001011011100110010001100101011110000101111101001001010100010010000000111101001000000010000000111001001000000010110000100000011011110111010101110100011100000111010101110100010111110101001001001111010000100100010101001110010111110111010001100101011100110111010000100000001111010010000000100000001000000010000000100000001000000010000000100000001000000010000000110000 5
b1001 '
b1001 ;
b1010 6
